2023-09-28T11:07:40.435+0530 [INFO]  Terraform version: 1.5.7
2023-09-28T11:07:40.435+0530 [DEBUG] using github.com/hashicorp/go-tfe v1.26.0
2023-09-28T11:07:40.435+0530 [DEBUG] using github.com/hashicorp/hcl/v2 v2.16.2
2023-09-28T11:07:40.435+0530 [DEBUG] using github.com/hashicorp/terraform-svchost v0.1.0
2023-09-28T11:07:40.435+0530 [DEBUG] using github.com/zclconf/go-cty v1.12.2
2023-09-28T11:07:40.436+0530 [INFO]  Go runtime version: go1.20.7
2023-09-28T11:07:40.436+0530 [INFO]  CLI args: []string{"t", "apply", "--auto-approve"}
2023-09-28T11:07:40.436+0530 [TRACE] Stdout is a terminal of width 124
2023-09-28T11:07:40.436+0530 [TRACE] Stderr is a terminal of width 124
2023-09-28T11:07:40.436+0530 [TRACE] Stdin is a terminal
2023-09-28T11:07:40.436+0530 [DEBUG] Attempting to open CLI config file: /home/chinthakaru/.terraformrc
2023-09-28T11:07:40.436+0530 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2023-09-28T11:07:40.436+0530 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2023-09-28T11:07:40.436+0530 [DEBUG] ignoring non-existing provider search directory /home/chinthakaru/.terraform.d/plugins
2023-09-28T11:07:40.436+0530 [DEBUG] ignoring non-existing provider search directory /home/chinthakaru/.local/share/terraform/plugins
2023-09-28T11:07:40.436+0530 [DEBUG] ignoring non-existing provider search directory /usr/local/share/terraform/plugins
2023-09-28T11:07:40.436+0530 [DEBUG] ignoring non-existing provider search directory /usr/share/terraform/plugins
2023-09-28T11:07:40.436+0530 [DEBUG] ignoring non-existing provider search directory /var/lib/snapd/desktop/terraform/plugins
2023-09-28T11:07:40.436+0530 [INFO]  CLI command args: []string{"apply", "--auto-approve"}
2023-09-28T11:07:40.446+0530 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2023-09-28T11:07:40.447+0530 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2023-09-28T11:07:40.447+0530 [DEBUG] New state was assigned lineage "b0d44c2c-5ff4-01c5-1dc9-22e20e994624"
2023-09-28T11:07:40.447+0530 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2023-09-28T11:07:40.447+0530 [TRACE] Meta.Backend: instantiated backend of type <nil>
2023-09-28T11:07:40.447+0530 [DEBUG] checking for provisioner in "."
2023-09-28T11:07:40.448+0530 [DEBUG] checking for provisioner in "/usr/bin"
2023-09-28T11:07:40.448+0530 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2023-09-28T11:07:40.448+0530 [INFO]  backend/local: starting Apply operation
2023-09-28T11:07:40.448+0530 [TRACE] backend/local: requesting state manager for workspace "default"
2023-09-28T11:07:40.448+0530 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2023-09-28T11:07:40.448+0530 [TRACE] backend/local: requesting state lock for workspace "default"
2023-09-28T11:07:40.448+0530 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2023-09-28T11:07:40.448+0530 [TRACE] statemgr.Filesystem: no previously-stored snapshot exists
2023-09-28T11:07:40.448+0530 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2023-09-28T11:07:40.448+0530 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2023-09-28T11:07:40.448+0530 [TRACE] backend/local: reading remote state for workspace "default"
2023-09-28T11:07:40.448+0530 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2023-09-28T11:07:40.448+0530 [TRACE] statemgr.Filesystem: snapshot file has nil snapshot, but that's okay
2023-09-28T11:07:40.448+0530 [TRACE] statemgr.Filesystem: read nil snapshot
2023-09-28T11:07:40.448+0530 [TRACE] backend/local: populating backend.LocalRun for current working directory
2023-09-28T11:07:40.449+0530 [TRACE] Config.VerifyDependencySelections: provider registry.terraform.io/hashicorp/azurerm has no lock file entry to satisfy ">= 3.63.0, < 4.0.0"
2023-09-28T11:07:40.449+0530 [DEBUG] backend/local: will prompt for input of unset required variables [storage_account_name storage_account_location storage_account_account_replication_type storage_account_account_tier storage_account_resource_group_name]
2023-09-28T11:07:40.449+0530 [DEBUG] command: asking for input: "var.storage_account_account_replication_type"
2023-09-28T11:07:42.292+0530 [WARN]  backend/local: Failed to request user input for variable "storage_account_account_replication_type": interrupted
2023-09-28T11:07:42.292+0530 [WARN]  backend/local: Failed to request user input for variable "storage_account_account_tier": interrupted
2023-09-28T11:07:42.292+0530 [WARN]  backend/local: Failed to request user input for variable "storage_account_location": interrupted
2023-09-28T11:07:42.292+0530 [WARN]  backend/local: Failed to request user input for variable "storage_account_name": interrupted
2023-09-28T11:07:42.292+0530 [WARN]  backend/local: Failed to request user input for variable "storage_account_resource_group_name": interrupted
2023-09-28T11:07:42.292+0530 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2023-09-28T11:07:42.292+0530 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
